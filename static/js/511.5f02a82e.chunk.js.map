{"version":3,"file":"static/js/511.5f02a82e.chunk.js","mappings":"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","sources":["components/Table/employeeColumns.js","components/Table/useTable.jsx","webpack://p14_front_vyplasiln/./src/components/Table/tablePagination.module.css?cafa","components/Table/TablePagination.jsx","webpack://p14_front_vyplasiln/./src/components/Table/dataTable.module.css?ea2c","components/Table/DataTable.jsx"],"sourcesContent":[" /*  Header – the name of the column\r\n      accessor – key in data  */\r\nexport const employeeColumns = [\r\n          {\r\n            Header: 'First Name',\r\n            accessor: 'firstName',\r\n          },\r\n          {\r\n            Header: 'Last Name',\r\n            accessor: 'lastName',\r\n          },\r\n          {\r\n            Header: 'Date of Birth',\r\n            accessor: 'dateOfBirth',\r\n          },\r\n          {\r\n            Header: 'Start Date',\r\n            accessor: 'startDate',\r\n          },\r\n          {\r\n            Header: 'Street',\r\n            accessor: 'street',\r\n          },\r\n          {\r\n            Header: 'City',\r\n            accessor: 'city',\r\n          },\r\n          {\r\n            Header: 'State',\r\n            accessor: 'stateAbbrev',\r\n          },\r\n          {\r\n            Header: 'Zip Code',\r\n            accessor: 'zipCode',\r\n          },\r\n          {\r\n            Header: 'Department',\r\n            accessor: 'department',\r\n          },\r\n]\r\n","/* react */\r\nimport { useState, useEffect } from \"react\"\r\n/* prop types */\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\n/**\r\n * @function calculateRange\r\n * @description calculate range for table \r\n * @param {Object} data - table data\r\n * @param {Number} rowsPerPage - rows per page\r\n */\r\nconst calculateRange = (data, rowsPerPage) => {\r\n  const range = []\r\n  const num = Math.ceil(data.length / rowsPerPage)\r\n  let i = 1\r\n  for (let i = 1; i <= num; i++) {\r\n    range.push(i)\r\n  }\r\n  return range\r\n}\r\ncalculateRange.prototype = {\r\n  data: PropTypes.object.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n}\r\n\r\n\r\n/**\r\n * @function sliceData\r\n * @description calculate range for table \r\n * @param {Object} data - table data\r\n * @param {Number} page - page of table\r\n * @param {Number} rowsPerPage - rows per page\r\n */\r\nconst sliceData = (data, page, rowsPerPage) => {\r\n  return data.slice((page - 1) * rowsPerPage, page * rowsPerPage)\r\n}\r\nsliceData.prototype = {\r\n  data: PropTypes.object.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n}\r\n\r\n\r\n/**\r\n * @function useTable\r\n * @export\r\n * @description use table\r\n * @param {Object} data - table data\r\n * @param {Number} page - table page\r\n * @param {Number} rowsPerPage - rows per page\r\n */\r\nconst useTable = (data, page, rowsPerPage) => {\r\n  const [tableRange, setTableRange] = useState([])\r\n  const [slice, setSlice] = useState([])\r\n\r\n  useEffect(() => {\r\n    const range = calculateRange(data, rowsPerPage)\r\n    setTableRange([...range])\r\n\r\n    const slice = sliceData(data, page, rowsPerPage)\r\n    setSlice([...slice])\r\n  }, [data, setTableRange, page, setSlice,rowsPerPage])\r\n\r\n  return { slice, range: tableRange }\r\n}\r\nexport default useTable\r\nuseTable.prototype = {\r\n  data: PropTypes.object.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"tableFooter\":\"tablePagination_tableFooter__Y3zLE\",\"button\":\"tablePagination_button__1oj3t\",\"activeButton\":\"tablePagination_activeButton__x4qY+\",\"inactiveButton\":\"tablePagination_inactiveButton__3zRqc\"};","/* react  */\r\nimport React, { useEffect } from \"react\"\r\n/* prop types */\r\nimport PropTypes from 'prop-types'\r\n/*  css  */\r\nimport styles from \"./tablePagination.module.css\"\r\n\r\n\r\n/**\r\n * @function TablePagination\r\n * @export\r\n * @description table pagination \r\n * @param {Object} range - range of table\r\n * @param {Number} setPage - set page of table\r\n * @param {Number} page - page of table\r\n * @param {object} slice - data slice of table\r\n * @return {HTMLElement} component generated HTML\r\n */\r\nexport default function TablePagination ({ range, setPage, page, slice }) {\r\n  useEffect(() => {\r\n    if (slice.length < 1 && page !== 1) {\r\n      setPage(page - 1);\r\n    }\r\n  }, [slice, page, setPage]);\r\n  return (\r\n    <div className={styles.tableFooter}>\r\n      {range.map((el, index) => (\r\n        <button\r\n          key={index}\r\n          className={`${styles.button} ${\r\n            page === el ? styles.activeButton : styles.inactiveButton\r\n          }`}\r\n          onClick={() => setPage(el)}\r\n        >\r\n          {el}\r\n        </button>\r\n\r\n        ))}\r\n    </div>\r\n  )\r\n}\r\nTablePagination.prototype = {\r\n  range: PropTypes.object.isRequired,\r\n  setPage: PropTypes.number.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  slice: PropTypes.object.isRequired,\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"ascending\":\"dataTable_ascending__+VzOO\",\"descending\":\"dataTable_descending__5sVc3\"};","/* react  */\r\nimport React, {useState, useEffect} from 'react'\r\n/* table  */\r\nimport { employeeColumns } from './employeeColumns'\r\nimport useTable from './useTable'\r\nimport TablePagination from './TablePagination'\r\n/* prop types */\r\nimport PropTypes from 'prop-types'\r\n/* css   */ \r\nimport styles from './dataTable.module.css'\r\n\r\n\r\n/**\r\n * @function useSortableData\r\n * @export\r\n * @description sort table data \r\n * @param {object} items - itemps of table\r\n * @param {string} config - config for table\r\n * @return {HTMLElement} component generated HTML\r\n */\r\nconst useSortableData = (items, config = null) => {\r\n  \r\n  const [sortConfig, setSortConfig] = React.useState(config)\r\n  /*  useMemo hook that lets you cache the result of a calculation\r\n   between re-renders  */\r\n  const sortedItems = React.useMemo(() => {\r\n    let sortableItems = [...items]\r\n   \r\n    if (sortConfig !== null) {\r\n     // console.log(sortConfig)\r\n      sortableItems.sort((a, b) => {\r\n        if ((sortConfig.key == 'dateOfBirth') || (sortConfig.key == 'startDate')) {\r\n          const yearA = a[sortConfig.key].toLowerCase().split('/')[2]\r\n          const yearB = b[sortConfig.key].toLowerCase().split('/')[2]\r\n          const monthA = a[sortConfig.key].toLowerCase().split('/')[1]\r\n          const monthB = b[sortConfig.key].toLowerCase().split('/')[1]\r\n          const dayA = a[sortConfig.key].toLowerCase().split('/')[0]\r\n          const dayB = b[sortConfig.key].toLowerCase().split('/')[0]\r\n        //   console.log(dayA, dayB)\r\n          if (yearA > yearB) \r\n            return sortConfig.direction === 'ascending' ? 1 : -1\r\n          else if (yearA < yearB)\r\n            return sortConfig.direction === 'ascending' ? -1 : 1\r\n          else {\r\n            if (monthA > monthB)\r\n              return sortConfig.direction === 'ascending' ? 1 : -1\r\n            else if (monthA < monthB)\r\n              return sortConfig.direction === 'ascending' ? -1 : 1\r\n            else {\r\n              if (dayA > dayB)\r\n                return sortConfig.direction === 'ascending' ? 1 : -1\r\n              else if (dayA < dayB)\r\n                return sortConfig.direction === 'ascending' ? -1 : 1\r\n              else return 0\r\n            }\r\n          }\r\n        }\r\n        else \r\n        {\r\n         if (a[sortConfig.key] < b[sortConfig.key]) {\r\n          return sortConfig.direction === 'ascending' ? -1 : 1;\r\n          }\r\n          if (a[sortConfig.key] > b[sortConfig.key]) {\r\n          return sortConfig.direction === 'ascending' ? 1 : -1;\r\n          }\r\n        return 0;\r\n        }\r\n      });\r\n    }\r\n    return sortableItems;\r\n  }, [items, sortConfig]);\r\n\r\n  const requestSort = (key) => {\r\n    let direction = 'ascending';\r\n    if (\r\n      sortConfig &&\r\n      sortConfig.key === key &&\r\n      sortConfig.direction === 'ascending'\r\n    ) {\r\n      direction = 'descending'\r\n    }\r\n    setSortConfig({ key, direction })\r\n  };\r\n\r\n  return { items: sortedItems, requestSort, sortConfig }\r\n}\r\nuseSortableData.prototype = {\r\n  items: PropTypes.object.isRequired,\r\n  config: PropTypes.string,\r\n}\r\n\r\n\r\n/**\r\n * @function DataTable\r\n * @export\r\n * @description data table \r\n * @param {object} products - data of table\r\n * @param {Number} rowsPerPage - rows per page\r\n * @return {HTMLElement} component generated HTML\r\n */\r\nexport default function DataTable({products,rowsPerPage}) {\r\n  const { items, requestSort, sortConfig } = useSortableData(products)\r\n\r\n  const [page, setPage] = useState(1);\r\n  let { slice, range } = useTable(items, page, rowsPerPage)\r\n  const [minEntries, setMinEntries] = useState(0);\r\n  const [maxEntries, setMaxEntries] = useState(0);\r\n\r\n//   console.log(\"number page:\",props.rowsPerPage)\r\n//   console.log(\"page:\",page)\r\n\r\n  useEffect(() => {\r\n        if (items) {\r\n            if ((products).length < range.length ) {\r\n                setMinEntries(1) \r\n            }\r\n            else {\r\n                setMinEntries((page - 1) * parseInt(rowsPerPage) + 1 )\r\n            } \r\n            if ((products).length < (rowsPerPage).length) {\r\n                setMaxEntries((products).length)\r\n            }\r\n            else {\r\n                if (((page - 1) * parseInt(rowsPerPage) + parseInt(rowsPerPage)) < (products).length) {\r\n                    setMaxEntries((page - 1) * parseInt(rowsPerPage) + parseInt(rowsPerPage))\r\n                }\r\n                else {\r\n                    setMaxEntries((products).length)\r\n                }\r\n                \r\n            }\r\n            \r\n        }\r\n  },[items,page,rowsPerPage])\r\n\r\n   //   console.log(\"range:\", range)\r\n   //   console.log(minEntries, maxEntries )\r\n\r\n\r\n  /**\r\n * @function getClassNamesFor\r\n * @export\r\n * @description column name for sort\r\n * @param {string} products - column name\r\n */\r\n  const getClassNamesFor = (name) => {\r\n    if (!sortConfig) {\r\n      return\r\n    }\r\n    return sortConfig.key === name ? sortConfig.direction : undefined\r\n  }\r\n  getClassNamesFor.prototype = {\r\n    name: PropTypes.string.isRequired,\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <table>\r\n        <thead>\r\n        <tr>\r\n        {employeeColumns.map((item,index) => (\r\n          <th key={item.accessor+'-'+index}>\r\n                <button\r\n                type=\"button\"\r\n                onClick={() => requestSort(item.accessor)}\r\n                className={`${styles[getClassNamesFor(item.accessor)]}`}\r\n                >\r\n                {item.Header}\r\n                </button>\r\n          </th>\r\n        ))}  \r\n        </tr>\r\n      </thead>    \r\n      <tbody>\r\n            {slice.map((item,index) => (\r\n          <tr key={item.id+'-'+index}>\r\n            <td>{item.firstName}</td>\r\n            <td>{item.lastName}</td>\r\n            <td>{item.dateOfBirth}</td>\r\n            <td>{item.startDate}</td>\r\n            <td>{item.street}</td>\r\n            <td>{item.city}</td>\r\n            <td>{item.stateAbbrev}</td>\r\n            <td>{item.zipCode}</td>\r\n            <td>{item.department}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n    { (slice.length === 0) &&\r\n           (<p>No data available in table</p>)\r\n\r\n        }\r\n        <div>\r\n            <p>Showing {minEntries} to {maxEntries} of {(products).length} entries</p>\r\n        </div>\r\n\r\n     <TablePagination range={range} slice={slice} setPage={setPage} page={page} />    \r\n    \r\n    </>    \r\n  )\r\n}\r\nDataTable.prototype = {\r\n  products: PropTypes.object.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n}"],"names":["employeeColumns","Header","accessor","calculateRange","data","rowsPerPage","range","num","Math","ceil","length","i","push","prototype","PropTypes","sliceData","page","slice","useTable","_useState","useState","_useState2","_slicedToArray","tableRange","setTableRange","_useState3","_useState4","setSlice","useEffect","_toConsumableArray","TablePagination","_ref","setPage","_jsx","className","styles","children","map","el","index","concat","onClick","useSortableData","items","config","arguments","undefined","_React$useState","React","_React$useState2","sortConfig","setSortConfig","sortableItems","sort","a","b","key","yearA","toLowerCase","split","yearB","monthA","monthB","dayA","dayB","direction","requestSort","DataTable","products","_useSortableData","_useTable","minEntries","setMinEntries","_useState5","_useState6","maxEntries","setMaxEntries","parseInt","getClassNamesFor","name","_jsxs","_Fragment","item","type","firstName","lastName","dateOfBirth","startDate","street","city","stateAbbrev","zipCode","department","id"],"sourceRoot":""}